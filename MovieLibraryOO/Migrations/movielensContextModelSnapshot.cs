// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieLibraryOO.DataModels;

namespace MovieLibraryOO.Migrations
{
    [DbContext(typeof(movielensContext))]
    partial class movielensContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("MovieLibraryOO.DataModels.Genre", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("genres");
                });

            modelBuilder.Entity("MovieLibraryOO.DataModels.GenresMovie", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<long?>("GenreId")
                        .HasColumnType("integer")
                        .HasColumnName("genre_id");

                    b.Property<long?>("MovieId")
                        .HasColumnType("integer")
                        .HasColumnName("movie_id");

                    b.HasKey("Id");

                    b.ToTable("genres_movies");
                });

            modelBuilder.Entity("MovieLibraryOO.DataModels.Movie", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<byte[]>("ReleaseDate")
                        .HasColumnType("date")
                        .HasColumnName("release_date");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.ToTable("movies");
                });

            modelBuilder.Entity("MovieLibraryOO.DataModels.Occupation", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("occupations");
                });

            modelBuilder.Entity("MovieLibraryOO.DataModels.Rating", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<long?>("MovieId")
                        .HasColumnType("integer")
                        .HasColumnName("movie_id");

                    b.Property<byte[]>("RatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("rated_at");

                    b.Property<long?>("Rating1")
                        .HasColumnType("integer")
                        .HasColumnName("rating");

                    b.Property<long?>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.ToTable("ratings");
                });

            modelBuilder.Entity("MovieLibraryOO.DataModels.User", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<long?>("Age")
                        .HasColumnType("integer")
                        .HasColumnName("age");

                    b.Property<string>("Gender")
                        .HasColumnType("char(1)")
                        .HasColumnName("gender");

                    b.Property<long?>("OccupationId")
                        .HasColumnType("integer")
                        .HasColumnName("occupation_id");

                    b.Property<string>("ZipCode")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("zip_code");

                    b.HasKey("Id");

                    b.ToTable("users");
                });
#pragma warning restore 612, 618
        }
    }
}
